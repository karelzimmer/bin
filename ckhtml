#!/usr/bin/env bash
# #############################################################################
# SPDX-FileComment: Webbestanden valideren
#
# SPDX-FileCopyrightText: Karel Zimmer <info@karelzimmer.nl>
# SPDX-License-Identifier: CC0-1.0
# #############################################################################

# #############################################################################
# Imports
# #############################################################################

export TEXTDOMAIN=kz
export TEXTDOMAINDIR=/usr/share/locale
if [[ -e /usr/bin/gettext.sh ]]; then
    source /usr/bin/gettext.sh
fi


# #############################################################################
# Constants
# #############################################################################

readonly PROGRAM_NAME='ckhtml'

readonly CSS_DIR=$HOME/kz-uploads/dist/css
readonly HTML_DIR_NL=$HOME/kz-uploads/dist/html/nl
readonly HTML_DIR_EN=$HOME/kz-uploads/dist/html/en

readonly HOME_URL=https://karelzimmer.nl
readonly CSS_URL=$HOME_URL/css
readonly HTML_URL_NL=$HOME_URL/html/nl
readonly HTML_URL_EN=$HOME_URL/html/en

readonly CSS_VALIDATOR_URL='http://jigsaw.w3.org/css-validator/validator?uri='
readonly HTML_VALIDATOR_URL='http://validator.w3.org/check?uri='


# #############################################################################
# Functions
# #############################################################################

# This function performs initial actions.
function init() {

    # Script-hardening.
    set -o errexit
    set -o errtrace
    set -o nounset
    set -o pipefail

    # Trap exit signal.
    trap 'exit $?' EXIT
}


# This function performs the script actions, such as checking the input.
function process {
    local dir=''
    local -i number_of_processes=0

    for dir in "$CSS_DIR" "$HTML_DIR_NL" "$HTML_DIR_EN"; do
        if ! [[ -d $dir ]]; then
            printf '%s\n' "$PROGRAM_NAME: map '$dir' bestaat niet"
            exit 1
        fi
    done

    number_of_processes=$(
        pgrep --count --full '/opt/google/chrome/chrome' || true
        )
    if [[ $number_of_processes -eq 0 ]]; then
        printf  '%s\n%s\n'                                      \
                'Google Chrome webrowser is nog niet gestart,'  \
                'start nu eerst de Google Chrome webrowser.'
        read -rp "Druk op Enter-toets wanneer Google Chrome webrowser is \
gestart [Enter]: "
        number_of_processes=$(
            pgrep --count --full '/opt/google/chrome/chrome' || true
            )
        if [[ $number_of_processes -eq 0 ]]; then
            printf '%s\n' 'Google Chrome webrowser is niet gestart.'
            exit 1
        fi
    fi

    validate_css
    validate_html
}


# This function validates the CSS files.
function validate_css {
    local filename=''

    cd "$CSS_DIR" || exit 1

    for filename in *.css; do
        google-chrome "$CSS_VALIDATOR_URL$CSS_URL/$filename"
    done
}


# This function validates the HTML files.
function validate_html {
    local filename=''

    cd "$HTML_DIR_NL" || exit 1

    for filename in *.html; do
        google-chrome "$HTML_VALIDATOR_URL$HTML_URL_NL/$filename"
    done

    cd "$HTML_DIR_EN" || exit 1

    for filename in *.html; do
        google-chrome "$HTML_VALIDATOR_URL$HTML_URL_EN/$filename"
    done
}


# This function controls the termination of the script.
function term {
    printf '%s\n' 'Controleer de tabbladen in Google Chrome.'
    printf '%s\n' "$(gettext 'Complete!')"

    exit 0
}

# #############################################################################
# Main
# #############################################################################

function main {
    init
    process
    term
}

main "$@"
