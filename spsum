#!/bin/bash
###############################################################################
# Controlebestanden opsplitsen.                                               #
#                                                                             #
# Geschreven door Karel Zimmer <info@karelzimmer.nl>.                         #
###############################################################################

PROGRAM_NAME=spsum


###############################################################################
# Global constants                                                            #
###############################################################################

readonly OPTIONS_SHORT=
readonly OPTIONS_LONG=
readonly USAGELINE="Gebruik: $PROGRAM_NAME"

readonly SEARCHDIR=$HOME/Downloads
readonly CHECKSUM=sha256
readonly HASHPROG=${CHECKSUM}sum


###############################################################################
# Global variables                                                            #
###############################################################################

ISO_FILE=''
ISO_FILE_FOUND=false


###############################################################################
# Functions                                                                   #
###############################################################################

function check_input {
    local -i    getopt_rc=0
    local       parsed=''

    parsed=$(
        getopt  --alternative                       \
                --options       "$OPTIONS_SHORT"    \
                --longoptions   "$OPTIONS_LONG"     \
                --name          "$PROGRAM_NAME"     \
                --              "$@"
        )       || getopt_rc=$?
    if [[ $getopt_rc -ne 0 ]]; then
        echo "$USAGELINE" >&2
        exit 1
    fi
    eval set -- "$parsed"

    while true; do
        case $1 in
            --)
                shift
                break
                ;;
            *)
                shift
                ;;
        esac
    done

    if [[ "$*" ]]; then
        error 'Te veel argumenten.'
        echo "$USAGELINE" >&2
        exit 1
    fi
}


function process_input {
    cd "$SEARCHDIR" || exit 1

    for ISO_FILE in *.iso; do

        if ! [[ -f "$ISO_FILE" ]]; then
            continue
        fi

        ISO_FILE_FOUND=true

        create_checksum_file

    done

    if ! $ISO_FILE_FOUND; then
        echo "Geen beeldbestanden (.iso) gevonden in $SEARCHDIR."
        exit 2
    fi
}


function create_checksum_file {
    local -a    files=()
    local -i    grep_rc=0

    for file in *; do
        files+=("$file")
    done
    grep    --word-regexp           \
            --regexp=" $ISO_FILE"   \
            --regexp="*$ISO_FILE"   \
            --exclude=*.iso         \
            --exclude=*512*         \
            --exclude-dir=*         \
            --no-filename           \
            -- "${files[@]}"        \
            > "$ISO_FILE.$HASHPROG" || grep_rc=$?
    if [[ $grep_rc -ne 0 ]]; then
        printf '%s\n\n' "Geen controlesom gevonden voor $ISO_FILE." >&2
    else
        printf '%s\n\n' "Controlebestand $ISO_FILE.$HASHPROG aangemaakt."
    fi
}


function term_script {
    rm --force --verbose -- *${CHECKSUM^^}*
    if $ISO_FILE_FOUND; then
        echo "Om de beeldbestanden (.iso) te controleren voer uit:
    cd $SEARCHDIR;$HASHPROG --check --ignore-missing *.$HASHPROG; cd -

Om de controlebestanden (.${HASHPROG}s) opnieuw te downloaden voer uit:
    kz dliso --checksums"
    fi
    exit 0
}


###############################################################################
# Main line                                                                   #
###############################################################################

function main {
    check_input "$@"
    process_input
    term_script
}


main "$@"
