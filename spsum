#!/usr/bin/env bash
# #############################################################################
# SPDX-FileComment: Split checksum files.
#
# SPDX-FileCopyrightText: Karel Zimmer <info@karelzimmer.nl>
# SPDX-License-Identifier: CC0-1.0
# #############################################################################

# #############################################################################
# Imports
# #############################################################################

export TEXTDOMAIN=kz
export TEXTDOMAINDIR=/usr/share/locale
source /usr/bin/gettext.sh


# #############################################################################
# Main
# #############################################################################

# Script-hardening.
set -o errexit
set -o errtrace
set -o nounset
set -o pipefail

# Trap exit signal.
trap 'exit $?' EXIT

readonly SEARCHDIR=$HOME/Downloads

declare iso=''
declare sha256sum=''

cd "$SEARCHDIR" || exit 1

for iso in *.iso; do
    if test -e "$iso".sha256; then
        printf '%s\n' "Checksum file $iso.sha256 already created."
        continue
    fi
    # shellcheck disable=SC2062
    sha256sum=$(
        grep    --word-regexp           \
                --regexp=" $iso$"       \
                --regexp=' *'"$iso$"    \
                --regexp='('"$iso"')'   \
                --exclude=*.iso         \
                --exclude="$iso".sha256 \
                --exclude-dir=*         \
                --no-filename           \
                -- *                    || true 
                )
    if [[ -z $sha256sum ]]; then
        printf '%s\n' "No checksum found for $iso." >&2
    else
        echo "$sha256sum" > "$iso".sha256
        printf '%s\n' "Checksum file $iso.sha256 created."
    fi
done
printf  '\n%s\n%s\n\n%s\n'                                      \
        'To check the image files (.iso) execute:'              \
        "cd $SEARCHDIR; sha256sum --check *.iso.sha256; cd -"   \
        'Files that probably can be deleted:'
ls -1 -- "$SEARCHDIR"/*{sum,SUM,256.}* 2>/dev/null

printf '%s\n' "$(gettext 'Complete!')"
exit 0
