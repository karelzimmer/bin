#!/usr/bin/bash
###############################################################################
# SPDX-FileComment: Beeldbestanden downloaden
#
# SPDX-FileCopyrightText: Karel Zimmer <info@karelzimmer.nl>
# SPDX-License-Identifier: CC0-1.0
###############################################################################

###############################################################################
# Constants
###############################################################################

PROGRAM_NAME='dliso'

OPTIONS_SHORT=c
OPTIONS_LONG=checksums
USAGELINE="Gebruik: $PROGRAM_NAME [-c|--checksums]"

HASHPROG=sha256sum
# ${hashprog,,}: All chars in $checksum --> lowercase (is already the case :-).
# ${hashprog^^}: All chars in $checksum --> uppercase.
CHECKSUM=${HASHPROG^^}S
SOURCE=http://releases.ubuntu.com
TARGET=$HOME/Downloads

###############################################################################
# Gobal variables
###############################################################################

full_vs=$(lsb_release --description --short | cut --delimiter=' ' --fields=2)
option_checksums=false

###############################################################################
# Functions
###############################################################################

function check_input {
    local -i    getopt_rc=0
    local       parsed=''

    parsed=$(
        getopt  --alternative                       \
                --options       "$OPTIONS_SHORT"    \
                --longoptions   "$OPTIONS_LONG"     \
                --name          "$PROGRAM_NAME"     \
                --              "$@"
        )       || getopt_rc=$?
    if [[ $getopt_rc -ne 0 ]]; then
        printf '%s\n' "$USAGELINE" >&2
        exit 1
    fi
    eval set -- "$parsed"

    while true; do
        case $1 in
            -c|--checksums)
                option_checksums=true
                shift
                ;;
            --)
                shift
                break
                ;;
            *)
                shift
                ;;
        esac
    done

    if [[ -n "$*" ]]; then
        error "$PROGRAM_NAME: te veel argumenten"
        printf '%s\n' "$USAGELINE" >&2
        exit 1
    fi
}


function process_input {
    read -rp  "Wat is de Ubuntu-versie? [$full_vs]: "
    if [[ -n $REPLY ]]; then
        full_vs="$REPLY"
    fi

    if $option_checksums; then
        download_checksums
        printf '%s\n' "Controlebestanden zijn gedownload en staan in $TARGET."
    else
        download_isos
        download_checksums
    fi
}


function download_isos {
    cd "$TARGET" || exit 1
    rm --force ubuntu-*.iso*

    URL_LIST="$SOURCE/$full_vs/ubuntu-$full_vs-desktop-amd64.iso
$SOURCE/$full_vs/ubuntu-$full_vs-live-server-amd64.iso"

    # max-args=1 zorgt ervoor dat per invoerregel 1 opdracht wordt gestart.
    # max-procs=4 zorgt ervoor dat maximaal 4 parallele taken worden gestart.
    printf '%s\n' "$URL_LIST" | xargs --max-args=1 --max-procs=4 wget
}


function download_checksums {
    cd "$TARGET" || exit 1
    rm --force "$CHECKSUM"-ubuntu

    wget    --output-document="$CHECKSUM"-ubuntu  \
            $SOURCE/"$full_vs/$CHECKSUM"
}


function term_script {
    printf '%s\n' "Om de beeldbestanden (.iso) te controleren voer uit: cd \
$TARGET; $HASHPROG --check $CHECKSUM-*; cd -

Om de $CHECKSUM-controlebestanden op te splitsen voer uit: \
spsum

Gereed."
    exit 0
}

###############################################################################
# Script
###############################################################################

function main {
    check_input "$@"
    process_input
    term_script
}

main "$@"
