#!/bin/bash
###############################################################################
# Beeldbestanden downloaden.
#
# Geschreven door Karel Zimmer <info@karelzimmer.nl>.
###############################################################################

PROGRAM_NAME=dliso

###############################################################################
# Global constants
###############################################################################

readonly options_short=c
readonly options_long=checksums
readonly usageline="Gebruik: $PROGRAM_NAME [-c|--checksums]"

readonly hashprog=sha256sum
# ${hashprog,,}: All chars in $checksum --> lowercase (is already the case :-).
# ${hashprog^^}: All chars in $checksum --> uppercase.
readonly checksum=${hashprog^^}S
readonly source_1=http://releases.ubuntu.com
readonly source_2=http://cdimage.ubuntu.com
readonly target=$HOME/Downloads

###############################################################################
# Gobal variables
###############################################################################

full_vs=$(lsb_release --description --short | cut --delimiter=' ' --fields=2)
option_checksums=false

###############################################################################
# Functions
###############################################################################

function check_input {
    local -i    getopt_rc=0
    local       parsed=''

    parsed=$(
        getopt  --alternative                       \
                --options       "$options_short"    \
                --longoptions   "$options_long"     \
                --name          "$PROGRAM_NAME"     \
                --              "$@"
        )       || getopt_rc=$?
    if [[ $getopt_rc -ne $SUCCESS ]]; then
        printf '%s\n' "$usageline" >&2
        exit 1
    fi
    eval set -- "$parsed"

    while true; do
        case $1 in
            -c|--checksums)
                option_checksums=true
                shift
                ;;
            --)
                shift
                break
                ;;
            *)
                shift
                ;;
        esac
    done

    if [[ "$*" ]]; then
        error 'Te veel argumenten.'
        printf '%s\n' "$usageline" >&2
        exit 1
    fi
}


function process_input {
    read -rp  "Wat is de Ubuntu-versie? [$full_vs]: "
    if [[ $REPLY ]]; then
        full_vs="$REPLY"
    fi

    if $option_checksums; then
        download_checksums
        printf '%s\n' "Controlebestanden zijn gedownload en staan in $target."
    else
        download_isos
        download_checksums
    fi
}


function download_isos {
    cd "$target" || exit 1
    rm --force {u,xu,lu}buntu-*.iso*

    URL_LIST="\
$source_1/$full_vs/ubuntu-$full_vs-desktop-amd64.iso
$source_1/$full_vs/ubuntu-$full_vs-live-server-amd64.iso
$source_2/lubuntu/releases/$full_vs/release/lubuntu-$full_vs-desktop-amd64.iso
$source_2/xubuntu/releases/$full_vs/release/xubuntu-$full_vs-desktop-amd64.iso"

    # max-args=1 zorgt ervoor dat per invoerregel 1 opdracht wordt gestart.
    # max-procs=4 zorgt ervoor dat maximaal 4 parallele taken worden gestart.
    printf '%s\n' "$URL_LIST" | xargs --max-args=1 --max-procs=4 wget
}


function download_checksums {
    cd "$target" || exit 1
    rm --force {u,xu,lu}buntu-*-SHA256SUMS

    wget    --output-document=ubuntu-$checksum    \
            $source_1/"$full_vs"/$checksum
    wget    --output-document=xubuntu-$checksum   \
            $source_2/xubuntu/releases/"$full_vs"/release/$checksum
    wget    --output-document=lubuntu-$checksum   \
            $source_2/lubuntu/releases/"$full_vs"/release/$checksum
}


function term_script {
    printf '%s\n' "Om de $checksum-controlebestanden op te splitsen voer uit: \
spsum

Om de beeldbestanden (.iso) te controleren voer uit: cd \
$target; $hashprog --check --ignore-missing *.$checksum; cd -"
    exit 0
}

###############################################################################
# Script
###############################################################################

function main {
    check_input "$@"
    process_input
    term_script
}

main "$@"
