#!/usr/bin/env bash
# #############################################################################
# SPDX-FileComment: Beeldbestanden downloaden
#
# SPDX-FileCopyrightText: Karel Zimmer <info@karelzimmer.nl>
# SPDX-License-Identifier: CC0-1.0
# #############################################################################

# #############################################################################
# Imports
# #############################################################################

export TEXTDOMAIN=kz
export TEXTDOMAINDIR=/usr/share/locale
if [[ -e /usr/bin/gettext.sh ]]; then
    source /usr/bin/gettext.sh
fi


# #############################################################################
# Constants
# #############################################################################

readonly PROGRAM_NAME='dliso'

readonly OPTIONS_SHORT=c
readonly OPTIONS_LONG=checksums
readonly USAGELINE="Gebruik: $PROGRAM_NAME [-c|--checksums]"

readonly HASHPROG=sha256sum
# ${hashprog,,}: All chars in $checksum --> lowercase (is already the case :-).
# ${hashprog^^}: All chars in $checksum --> uppercase.
readonly CHECKSUM=${HASHPROG^^}S
readonly SOURCE=http://releases.ubuntu.com
readonly TARGET=$HOME/Downloads


# #############################################################################
# Functions
# #############################################################################

# This function performs initial actions.
function init() {

    # Script-hardening.
    set -o errexit
    set -o errtrace
    set -o nounset
    set -o pipefail

    # Trap exit signal.
    trap 'exit $?' EXIT
}


# This function performs the script actions, such as checking the input.
function process {
    check_input "$@"

    read -rp  "Wat is de Ubuntu-versie? [$full_vs]: "
    if [[ -n $REPLY ]]; then
        full_vs="$REPLY"
    fi

    if $option_checksums; then
        download_checksums
        printf '%s\n' "Controlebestanden zijn gedownload en staan in $TARGET."
    else
        download_isos
        download_checksums
    fi
}


# This function checks the input parameters.
function check_input {
    local -i getopt_rc=0
    local parsed=''

    parsed=$(
        getopt  --alternative                       \
                --options       "$OPTIONS_SHORT"    \
                --longoptions   "$OPTIONS_LONG"     \
                --name          "$PROGRAM_NAME"     \
                --              "$@"
        )       || getopt_rc=$?
    if [[ $getopt_rc -ne 0 ]]; then
        printf '%s\n' "$USAGELINE" >&2
        exit 1
    fi
    eval set -- "$parsed"

    while true; do
        case $1 in
            -c|--checksums)
                option_checksums=true
                shift
                ;;
            --)
                shift
                break
                ;;
            *)
                shift
                ;;
        esac
    done

    if [[ -n "$*" ]]; then
        error "$PROGRAM_NAME: te veel argumenten"
        printf '%s\n' "$USAGELINE" >&2
        exit 1
    fi
}


# This function downloads the ISO files.
function download_isos {
    cd "$TARGET" || exit 1
    rm --force ubuntu-*.iso*

    URL_LIST="$SOURCE/$full_vs/ubuntu-$full_vs-desktop-amd64.iso
$SOURCE/$full_vs/ubuntu-$full_vs-live-server-amd64.iso"

    # max-args=1 zorgt ervoor dat per invoerregel 1 opdracht wordt gestart.
    # max-procs=4 zorgt ervoor dat maximaal 4 parallele taken worden gestart.
    printf '%s\n' "$URL_LIST" | xargs --max-args=1 --max-procs=4 wget
}


# This function downloads the checksums.
function download_checksums {
    cd "$TARGET" || exit 1
    rm --force "$CHECKSUM"-ubuntu

    wget    --output-document="$CHECKSUM"-ubuntu  \
            $SOURCE/"$full_vs/$CHECKSUM"
}


# This function controls the termination of the script.
function term {
    printf '%s\n' "Om de beeldbestanden (.iso) te controleren voer uit: cd \
$TARGET; $HASHPROG --check $CHECKSUM-*; cd -

Om de $CHECKSUM-controlebestanden op te splitsen voer uit: \
spsum
"
    printf '%s\n' "$(gettext 'Complete!')"

    exit 0
}

# #############################################################################
# Main
# #############################################################################

function main {
    local full_vs=''
    local option_checksums=false

    full_vs=$(
        lsb_release --description --short |
        cut --delimiter=' ' --fields=2
        )

    init "$@"
    process "$@"
    term
}

main "$@"
