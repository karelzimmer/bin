#!/usr/bin/env bash
# shellcheck source=common.sh
###############################################################################
# SPDX-FileComment: Git clone of all public remote repos in the home directory
#
# SPDX-FileCopyrightText: Karel Zimmer <info@karelzimmer.nl>
# SPDX-License-Identifier: CC0-1.0
###############################################################################

###############################################################################
# Imports
###############################################################################
source common.sh


###############################################################################
# Constants
###############################################################################

readonly BOLD='\033[1m'
readonly NORMAL='\033[0m'
readonly USER_NAME='karelzimmer'


###############################################################################
# Globals
###############################################################################

declare repo=''
declare repos=''


###############################################################################
# Main
###############################################################################

init_script

# Get all public repositories for USER_NAME with curl via GitHub REST API, and
# extract required info with jq when available.
if [[ -n $(type -t jq) ]]; then
    repos=$(
        curl --silent "https://api.github.com/users/$USER_NAME/repos"   |
        jq '.[] | {name: .name}'                                        |
        jq --raw-output .name
        )
else
    repos=$(
        curl --silent "https://api.github.com/users/$USER_NAME/repos"   |
        grep --regexp='"full_name"'                                     |
        cut --delimiter=':' --fields=2-                                 |
        sed --expression='s/,//'                                        |
        sed --expression='s/"//g'                                       |
        sed --expression='s|karelzimmer/||'
        )
fi

for repo in $repos; do
    # Skip special repository.
    if [[ $repo = "$USER_NAME" ]]; then
        continue
    fi
    printf "\n${BOLD}Pull %s...$NORMAL\n" "$HOME/$repo"
    git clone "https://github.com/$USER_NAME/$repo.git" "$HOME/$repo" || true
done

printf '%s\n' "$(gettext 'Complete!')"
exit 0
