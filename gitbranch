#!/usr/bin/env bash
# #############################################################################
# SPDX-FileComment: Show all local git branches in the home directory
#
# SPDX-FileCopyrightText: Karel Zimmer <info@karelzimmer.nl>
# SPDX-License-Identifier: CC0-1.0
# #############################################################################

# #############################################################################
# Imports
# #############################################################################

export TEXTDOMAIN=kz
export TEXTDOMAINDIR=/usr/share/locale
if [[ -e /usr/bin/gettext.sh ]]; then
    source /usr/bin/gettext.sh
fi


# #############################################################################
# Constants
# #############################################################################

readonly BOLD='\033[1m'
readonly NORMAL='\033[0m'


# #############################################################################
# Globals
# #############################################################################

declare repo=''
declare repos=''


# #############################################################################
# Main
# #############################################################################

# Script-hardening.
set -o errexit
set -o errtrace
set -o nounset
set -o pipefail

# Trap exit signal.
trap 'exit $?' EXIT

repos=$(
    find    "$HOME"     \
		   	-maxdepth 2 \
            -name .git  \
            -type d     \
            -print      |
    sort                |
    sed     --expression='s|/.git||'
    )

for repo in $repos; do
    printf "${BOLD}Branch %s...$NORMAL\n" "$repo"
    cd "$repo"
    git branch --all --verbose
    printf '\n'
done

printf '%s\n' "$(gettext 'Complete!')"
exit 0
