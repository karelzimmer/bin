#!/bin/bash
set -o errexit
set -o nounset

# ckyear: check for (copyright) year

# e.g. when it is the new year 2024:
# search for ' 2023' will find:
# # <https://creativecommons.org/publicdomain/zero/1.0>, 2023.
# must be changed to:
# # <https://creativecommons.org/publicdomain/zero/1.0>, 2023-2024.
# and:
# search for '-2023' will find:
# # <https://creativecommons.org/publicdomain/zero/1.0>, 2009-2023.
# must be changed to:
# # <https://creativecommons.org/publicdomain/zero/1.0>, 2009-2024.

last_year=${1:-$(date '+%Y' --date='last year')}
output=/tmp/cknwyr.log

cd "$HOME"

echo "ckyear [year]: check for (copyright) year" > $output
{
    echo
    echo "Directory: $HOME"
    echo "Last year: $last_year"
    echo 
} >> $output

while read -r file; do
    case $file in
        *.deb|*.gif|*.ico|*.pdf|*.png|*.svg)
            continue
            ;;
        *kz-docs/*.odt|*kz-uploads/robots.txt)
            continue
            ;;
        *)
            echo "$file" >> $output
            grep --fixed-strings --regexp="$last_year" "$file" &>> $output|| true
            echo >> $output
            ;;
    esac
done < <(
        find ./kz-*                 \
        -type f                     \
        -not -path './kz-deb/*'     \
        -not -path './*/.git*'      \
        -not -path './*/dist*'      \
        -not -path '*/__pycache__*' \
        -not -name kz.mo            \
        -not -name kz.po            \
        -not -name kz.pot           \
        -not -name license          \
        -not -name LICENSE          \
        -not -name README           \
        -not -name README.md        \
        -print                      |
        sort
        )

less $output
