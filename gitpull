#!/usr/bin/bash
# shellcheck source=bin_common.sh
###############################################################################
# SPDX-FileComment: Git pull (or git clone) of all public remote REPOs
#
# SPDX-FileCopyrightText: Karel Zimmer <info@karelzimmer.nl>
# SPDX-License-Identifier: CC0-1.0
###############################################################################
source "$(dirname "$0")"/bin_common.sh

declare PROGRAM_NAME='gitpull'
declare USER=karelzimmer

declare REPO=''
declare REPO_LIST=''

# Get all public REPOsitories for USER with curl via GitHub REST API, and
# extract required info with jq when available.
if command -v jq &> /dev/null; then
    REPO_LIST=$(
        curl --silent "https://api.github.com/users/$USER/REPOs"    |
        jq '.[] | {name: .name}'                                    |
        jq --raw-output .name
        )
else
    REPO_LIST=$(
        curl --silent "https://api.github.com/users/$USER/REPOs"    |
        grep --regexp='"full_name"'                                 |
        cut --delimiter=':' --fields=2-                             |
        sed --expression='s/,//'                                    |
        sed --expression='s/"//g'                                   |
        sed --expression='s|karelzimmer/||'
        )
fi

for REPO in $REPO_LIST; do
    # Skip special REPOsitory.
    if [[ $REPO = "$USER" ]]; then
        continue
    fi
    printf "${BOLD}Pull %s$NORMAL\n" "$REPO"
    if [[ -d "$HOME/$REPO" ]]; then
        cd "$HOME/$REPO" || exit 1
        git pull
    else
        git clone "https://github.com/$USER/$REPO.git" "$HOME/$REPO"
    fi
done

printf "$GREEN%b$NORMAL\n" "$PROGRAM_NAME $(gettext 'finished')"
